#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#define MAX_SIZE 5
#define SWAP(x,y,t)((t)=(x),(x)=(y),(y)=(t))

typedef struct{
	int id;
	char name[20];
}element;

int compare1(element a, element b)
{
	if(a.id<b.id) return -1;
	else if (a.id==b.id) return 0;
	else return 1;
}

int compare2(element a, element b)
{
	if(strcmp(a.name, b.name)<0) return -1;
	else if (strcmp(a.name, b.name)==0) return 0;
	else return 1;
}

void selection_sort(element list[],int n, int (*comp)(element a,element b))
{
	int i,j,least;
	element temp;
	for(i=0;i<n-1;i++){
		least=i;
		for(j=i+1;j<n;j++)
			//if(list[j].id<list[least].id) least=j;
			if(comp(list[j], list[least])<0) least=j;
		SWAP(list[i], list[least],temp);
}
}

void selection_sort2(element list[], int n)
{ 
	int i,j,least;
	element temp;
	for(i=0;i<n-1;i++){
		least=i;
		for(j=i+1;j<n;j++)
			if(strcmp(list[j].name,list[least].name)<0) least=j;
		SWAP(list[i], list[least],temp);
}
}
void insertion_sort(element list[], int n)
{
	//id순으로 정렬
}

void main()
{
	int i;
	element list[MAX_SIZE]={{45,"Kwon"},{30,"Lee"},{25,"Park"},{54,"Kim"},{13,"Choi"}};
	int n=MAX_SIZE;

		
	selection_sort(list,n, compare2);
//	insertion_sort(list,n);
	for(i=0;i<n;i++)
		printf("%d, %s\n ",list[i].id,list[i].name);
	printf("\n");

  
}