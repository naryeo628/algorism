#include<stdio.h>
#include <stdlib.h>
#define MAX_SIZE 10
#define SWAP(x,y,t) ((t)=(x), (x)=(y), (y)=(t))


void selection_sort(int list[], int n)
{
	int i,j,least, temp;
	for(i=0;i<n;i++){
		least=i;
		for(j=i+1; j<n;j++)
			if(list[least]>list[j]) least=j;
		SWAP(list[i],list[least],temp);
	}
}

void insertion_sort(int list[], int n)
{
	int i,j,key;
	for(i=1;i<n;i++){
		key=list[i];
		for(j=i-1;j>=0 && list[j]>key;j--)
			list[j+1]=list[j];
		list[j+1]=key;
	}
}

void bubble_sort(int list[], int n)
{  
   int i, j, temp;
   for(i=n-1; i>0; i--){
		for(j=0; j<i; j++)
			/* 앞뒤의 레코드를 비교한 후 교체 */
	      if(list[j]>list[j+1])   
     		    SWAP(list[j], list[j+1], temp);
   }
}

void inc_insertion_sort(int list[], int first, int last, int gap)
{
	int i, j, key;
	for(i=first+gap; i<=last; i=i+gap){
		key = list[i];
		for(j=i-gap; j>=first && key<list[j];j=j-gap)
			list[j+gap]=list[j];
		list[j+gap]=key;
	}
}
//
void shell_sort( int list[], int n )   // n = size
{
	int i, gap;
	for( gap=n/2; gap>0; gap = gap/2 ) {
		if( (gap%2) == 0 ) gap++;
		for(i=0;i<gap;i++)		// 부분 리스트의 개수는 gap
			inc_insertion_sort(list, i, n-1, gap);
	}
}




void print(int list[], int n)
{
	int i;
	for(i=0;i<n;i++)
		printf("%d ", list[i]);
	printf("\n");
}

void main()
{
	int i;
	int a[MAX_SIZE]={1,3,4,9,7,6,5,8,2,10};
	print(a,10);
	//selection_sort(a,10);
	//bubble_sort(a,10);
	shell_sort(a,10);
	print(a,10);
	int list[10];
	for(i=0;i<10;i++)
		list[i]=rand()%100;
	print(list,10);
	//selection_sort(list,10);
	//bubble_sort(list, 10);
	shell_sort(list, 10);
	print(list, 10);
}


