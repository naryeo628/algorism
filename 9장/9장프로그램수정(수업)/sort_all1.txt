#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#define MAX_SIZE 50000
#define SWAP(x,y,t)((t)=(x),(x)=(y),(y)=(t))

void selection_sort(int list[],int n)
{
	//
}

void insertion_sort(int list[], int n)
{
	//
}
 
void bubble_sort(int list[], int n)
{
	//
}

void inc_insertion_sort(int list[],int first,int last,int gap)
{
	//
}

void shell_sort(int list[],int n)
{
	//
}

void sort_int(int list[],int n, int number)
{
	clock_t start,finish;
	double duration;
	start=clock();
	if(number==1) selection_sort(list,n);
	else if(number==2)insertion_sort(list, n);
	else if(number==3) bubble_sort(list,n);
	else shell_sort(list,n);
	finish=clock();
	duration=(double)(finish-start)/CLOCKS_PER_SEC;
	printf("the duration=%f\n",duration);
}

void main()
{
	int i;
	int list[MAX_SIZE];
	int n=MAX_SIZE;
	for(i=0;i<n;i++)
		list[i]=rand();
	/*
	selection_sort(list,n);
	for(i=0;i<n;i++)
		printf("%d ",list[i]);
	printf("\n");

   for(i=0;i<n;i++)
		list[i]=rand()%100;
	insertion_sort(list,n);
	for(i=0;i<n;i++)
		printf("%d ",list[i]);
	printf("\n");

*/
	
	int number;
	printf("select the method\n");
	printf("1-selection, 2-insertion,3-bubble, 4-shell\n");
	scanf("%d",&number);

	sort_int(list,n,number);	


}

